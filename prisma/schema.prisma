// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Detailer {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  businessName String
  email        String?
  phone        String
  address      String
  city         String
  state        String
  zipCode      String
  description  String
  latitude     Float
  longitude    Float
  priceRange   String
  website      String?
  imageUrl     String?
  businessHours Json
  images       Image[]
  detailerImages DetailerImage[]
  createdAt    DateTime @default(now())
  services     DetailerService[]
  verified     Boolean @default(false)
}

model Image {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  url        String
  alt        String
  detailer   Detailer @relation(fields: [detailerId], references: [id])
  detailerId String   @db.ObjectId
  type       String   // 'profile' or 'portfolio'
}

model DetailerImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  key       String   // S3 key for the image
  alt       String
  detailer  Detailer @relation(fields: [detailerId], references: [id])
  detailerId String  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String     @unique
  category   String     // "Interior", "Exterior", "Additional Services"
  detailers  DetailerService[]
}

model DetailerService {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  detailer   Detailer @relation(fields: [detailerId], references: [id])
  detailerId String   @db.ObjectId
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String   @db.ObjectId
}
